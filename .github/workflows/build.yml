name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
        
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install
          
      - name: Build Windows
        env:
          PMO_CERT_PASSWORD: ${{ secrets.PMO_CERT_PASSWORD }}
        run: wails build -nsis
        
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: build/bin/pmo.exe
          
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
        
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install
          
      - name: Build macOS
        env:
          APPLE_DEVELOPER_ID: ${{ secrets.APPLE_DEVELOPER_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          wails build -platform darwin/universal
          
      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: build/bin/pmo.app
          
  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-build/pmo.exe
            macos-build/pmo.app/**/*
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
